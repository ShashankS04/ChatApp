version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15
    container_name: chat-postgres
    ports:
      - "5434:5434"
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatapp
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatapp"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:7
    container_name: chat-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: chatapp
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: chatapp
    volumes:
      - mongodb_data:/data/db
    networks:
      - chat-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/chatapp --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: chat-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - chat-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: chat-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Optional: Database Management Tools
  pgadmin:
    image: dpage/pgadmin4
    container_name: chat-pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chatapp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - postgres
    networks:
      - chat-network

  mongo-express:
    image: mongo-express
    container_name: chat-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: chatapp
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://chatapp:password@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - chat-network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  chat-network:
    driver: bridge
